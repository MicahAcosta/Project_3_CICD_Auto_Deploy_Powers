  # test-frontend:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     # Checkout code from git
  #     -checkout
  #     # Restore from cache
  #     - restore_cache:
  #         keys: [frontend-build]
      
  #     # Your job code here
  #     - run:
  #       name: Run frontend test
  #       command: |
  #         cd frontend
  #         npm install
  #         npm run test
  
  
  
    # test-backend:
  #   docker:
  #     - image: circleci/node:13.8.0
      
  #   steps:
  #     # Checkout code from git
  #     -checkout
  #     # Restore from cache
  #     - restore_cache:
  #         keys: [backend-build]        
      
  #     # Your job code here
  #     - run:
  #       name: Run backend test
  #       command: |
  #         cd backend
  #         npm install
  #         npm run test
  
  
  
  
  
  
  
 #Deploy Infra 
deploy-infrastructure:
    docker:
      # Docker image here that supports AWS CLI
      - image: amazon/aws-cli
    steps:
      # Checkout code from git
      - checkout
      
      # Install tar and gzip
      - run: yum install tar gzip -y
      - run:
          name: Ensure back-end infrastructure exists
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/backend.yml \
              --tags project=udapeople \
              --stack-name "udapeople-backend-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}"
              
              # --stack-name " with workflow id" \
              # --parameter-overrides ID="your workflow id"  
              
      - run:
          name: Ensure front-end infrastructure exist
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/frontend.yml \
              --tags project=udapeople \
              --stack-name "udapeople-frontend-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}"
              
              # --stack-name "your front-end stack name with workflow id" \
              # --parameter-overrides ID="your workflow id"  
              
      - run:
          name: Add back-end ip to ansible inventory
          command: |
            # Your code here
            aws ec2 describe-instances \
            --query "Reservations[*].Instances[*].[PublicIpAddress]" \
            --filters "Name=tag:Name,Values=backend-${CIRCLE_WORKFLOW_ID:0:7}" \
            --output text >> ~/project/.circleci/ansible/inventory.txt
            cat ~/project/.circleci/ansible/inventory.txt            

      - persist_to_workspace:
          root: ~/
          paths:
            - project/.circleci/ansible/inventory.txt
      # Here's where you will add some code to rollback on failure 
      # - destroy-environment:
      #     workflow_id: ${CIRCLE_WORKFLOW_ID:0:7}
